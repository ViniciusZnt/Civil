package templates

templ Sampling() {
	<html>
		<div class="flex justify-center">
			<h2 class="text-2xl font-bold mb-4 font-body">Selecione o Intervalo de Datas</h2>
		</div>
		<form id="dateRangeForm" class="space-y-4">
			<div>
				<label for="startDate" class="block font-medium font-body">Data de Início:</label>
				<input type="date" id="startDate" name="startDate" min="2023-10-16" value="2023-10-16" class="border rounded-md p-2 w-full text-white bg-black bg-opacity-80"/>
				<label for="endDate" class="block font-body">Data de Término:</label>
				<input type="date" id="endDate" name="endDate" min="2023-10-16" value="2023-10-16" class="border rounded-md p-2 w-full text-white bg-black bg-opacity-80"/>
				<button type="submit" class="my-button">Aplicar Filtro</button>
			</div>
		</form>
		<script>
			document.getElementById("dateRangeForm").addEventListener("submit", e => {
				e.preventDefault(); 
				transformDataInArray();
			})

			function transformDataInArray() {
				var startDate = document.getElementById("startDate").value;
				var endDate = document.getElementById("endDate").value;

				console.log(startDate)
				console.log(endDate)

				// filtra dados inicio e fim
				let tempAtual = [];
				let arrayFiltrado = []; 
			

				dadosTemp.forEach(objeto => {
					tempAtual.push(objeto.tempo_atual)
				})

				tempAtual.forEach(tempo => {
					const parte = tempo.split(" ");
					arrayFiltrado.push(parte[0]);
				});

				applyFilter(arrayFiltrado, startDate, endDate)
			}
				
			function applyFilter(arrayFiltrado, startDate, endDate){

				// dadosTemp <- aplicar filtro
				// recarregar o gráfico com o novo array
			
				let dadosFiltrados = []
				for (let i = 0; i < arrayFiltrado.length; i++) {
					
					if (arrayFiltrado[i] >= startDate && arrayFiltrado[i] <= endDate) {
						dadosFiltrados.push(arrayFiltrado[i]);
						// console.log(arrayFiltrado[i])
					}
				}
				console.log(dadosFiltrados)
				// atualiza o gráfico

				

				let dadosFinais = []
				dadosTemp.forEach(objeto =>{
					for(i=0;i<dadosFiltrados.length;i++){
						if(dadosTemp.tempo_atual == dadosFiltrados[i]){
							//TODO Transformar esses dados em uma estruturar e chamar a fun
							//ção carrega Chart porque ela aceita uma array com objetos
							//dadosFinais.
						}
					}
				})

				//carregaChart(dadosFiltrados)
			}
    
		</script>
	</html>
}
